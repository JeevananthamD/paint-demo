{"version":3,"sources":["components/Selection.js","components/ColourSelector.js","components/App.js","reportWebVitals.js","index.js"],"names":["Selection","props","useState","background","component","updateSelectionStyle","applyColor","className","onClick","style","ColourSelector","config","selectNextBackground","classname","label","colourConfig","key","App","nextBackground","id","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAceA,EAVG,SAACC,GACf,MAAwCC,mBAAS,CAACC,WAAW,KAA7D,mBAAKC,EAAL,KAAgBC,EAAhB,KACOC,EAAcL,EAAdK,WACP,OACI,qBAAKC,UAAU,UAAUC,QAAS,kBAAIF,EAAWD,IAAuBI,MAAO,CAACN,WAAYC,EAAUD,YAAtG,SACI,oBAAII,UAAU,cAAd,0BCEGG,EATQ,SAACT,GACtB,IAAQU,EAAiCV,EAAjCU,OAAQC,EAAyBX,EAAzBW,qBACRT,EAAeQ,EAAfR,WACR,OACE,wBAAQI,UAAWI,EAAOE,UAAWL,QAAS,kBAAMI,EAAqB,CAACT,WAAYA,KAAtF,SACGQ,EAAOG,SCFRC,EAAe,CAAC,CAClBC,IAAK,OACLF,MAAO,OACPD,UAAW,WACXV,WAAY,qBACX,CACDa,IAAK,SACLF,MAAO,SACPD,UAAW,aACXV,WAAY,qBACX,CACDa,IAAK,QACLF,MAAO,QACPD,UAAW,YACXV,WAAY,qBAkCDc,EA5BH,WACV,MAA6Cf,mBAAS,CAAEC,WAAY,KAApE,mBAAKe,EAAL,KAAqBN,EAArB,KAEMN,EAAa,SAACD,GAClBA,EAAqBa,IAGvB,OACE,sBAAKC,GAAG,SAAR,UACE,oBAAIZ,UAAU,UAAd,SAXQ,6DAYR,qBAAKA,UAAU,MAAf,SACGQ,EAAaK,KAAI,SAACT,EAAQU,GAAT,OAChB,cAAC,EAAD,CAAiCV,OAAQA,EAAQC,qBAAsBA,GAAlDD,EAAOK,UAIhC,qBAAKT,UAAU,MAAMY,GAAG,mBAAxB,SAEI,CAAC,aAAc,aAAc,cAAcC,KAAI,SAAAJ,GAAG,OAChD,cAAC,EAAD,CAAqBV,WAAYA,GAAjBU,YChCbM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.69ff144e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\n\r\nconst Selection = (props) => {\r\n    let [component, updateSelectionStyle] = useState({background:''})\r\n    const {applyColor} = props;\r\n    return(\r\n        <div className=\"fix-box\" onClick={()=>applyColor(updateSelectionStyle)} style={{background: component.background}}>\r\n            <h2 className=\"subheadingS\" >Selection</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Selection;\r\n","import React from 'react';\r\n\r\nconst ColourSelector = (props) => {\r\n  const { config, selectNextBackground } = props\r\n  const { background } = config;\r\n  return (\r\n    <button className={config.classname} onClick={() => selectNextBackground({background: background})}>\r\n      {config.label}\r\n    </button>\r\n  )\r\n}\r\nexport default ColourSelector;\r\n","import React, { useState } from \"react\";\nimport '../styles/App.css';\nimport Selection from './Selection';\nimport ColourSelector from './ColourSelector';\n\nconst colourConfig = [{\n    key: 'blue',\n    label: 'Blue',\n    classname: 'btn-blue',\n    background: 'rgb(34, 193, 195)'\n  }, {\n    key: 'orange',\n    label: 'Orange',\n    classname: 'btn-orange',\n    background: 'rgb(221, 112, 18)'\n  }, {\n    key: 'green',\n    label: 'Green',\n    classname: 'btn-green',\n    background: 'rgb(44, 209, 88)'\n  }\n]\n\nconst title = 'Select the gradient and then the Box to change the color';\n\nconst App = () => {\n  let [nextBackground, selectNextBackground] = useState({ background: \"\" })\n  \n  const applyColor = (updateSelectionStyle) => {\n    updateSelectionStyle(nextBackground)\n  }\n\n  return (\n    <div id=\"master\">\n      <h5 className=\"heading\">{title}</h5>\n      <div className=\"row\">\n        {colourConfig.map((config, index) => (\n          <ColourSelector key={config.key} config={config} selectNextBackground={selectNextBackground} />\n        ))}\n      </div>\n\n      <div className='row' id=\"children-wrapper\">\n        {\n          [\"selection1\", \"selection2\", \"selection3\"].map(key => (\n            <Selection key={key} applyColor={applyColor} />\n          ))\n        }\n      </div>\n    </div >\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}